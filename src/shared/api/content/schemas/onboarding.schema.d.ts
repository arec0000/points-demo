/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type TextVariant = "pill" | "menu" | "button" | "small" | "middle" | "large" | "h1" | "h2" | "h3" | "h4";
export type Fields = (Input | Phone | Textarea | Checkbox | Radio | Number | Select | Date | ErrorMessage)[];
export type Size = "xs" | "sm" | "md" | "lg" | "xl" | "2xl";

export interface Onboarding {
  form: MultistepForm;
}
export interface MultistepForm {
  steps: {
    schema: string;
    title?: string;
    titleVariant?: TextVariant;
    fields: (Input | Phone | Textarea | Checkbox | Radio | Number | Select | Date | ErrorMessage)[];
    defaultValues?: {
      [k: string]: unknown;
    };
    gap?: Size;
    fieldsGap?: Size;
    buttonText: string;
    buttonVariant?: "primary" | "secondary";
    buttonIsFixed?: boolean;
  }[];
  searchParamKey?: string;
  scroll?: boolean;
  showProgress?: boolean;
  persist?: boolean;
  persistKey?: string;
  startProgress?: number;
  gap?: Size;
}
export interface Input {
  type: "input";
  name: string;
  key?: string;
  hideErrors?: boolean;
  subfields?: Fields;
  inputType?: "text" | "email" | "password";
  defaultValue?: string;
  placeholder?: string;
  disabled?: boolean;
}
export interface Phone {
  type: "phone";
  name: string;
  key?: string;
  hideErrors?: boolean;
  subfields?: Fields;
  defaultValue?: string;
  label?: string;
  disabled?: boolean;
}
export interface Textarea {
  type: "textarea";
  name: string;
  key?: string;
  hideErrors?: boolean;
  subfields?: Fields;
  defaultValue?: string;
  placeholder?: string;
  disabled?: boolean;
}
export interface Checkbox {
  type: "checkbox";
  name: string;
  key?: string;
  hideErrors?: boolean;
  subfields?: Fields;
  defaultValue?: boolean;
  label: string;
  disabled?: boolean;
}
export interface Radio {
  type: "radio";
  name: string;
  key?: string;
  hideErrors?: boolean;
  subfields?: Fields;
  defaultValue?: string;
  value: string;
  label: string;
  disabled?: boolean;
}
export interface Number {
  type: "number";
  name: string;
  key?: string;
  hideErrors?: boolean;
  subfields?: Fields;
  defaultValue?: number;
  label: string;
  max?: number;
  min?: number;
  disabled?: boolean;
}
export interface Select {
  type: "select";
  name: string;
  key?: string;
  hideErrors?: boolean;
  subfields?: Fields;
  defaultValue?: string;
  options: {
    value: string;
    label: string;
  }[];
  placeholder?: string;
  disabled?: boolean;
}
export interface Date {
  type: "date";
  name: string;
  key?: string;
  hideErrors?: boolean;
  subfields?: Fields;
  defaultValue?: string;
  placeholder?: string;
  disabled?: boolean;
}
export interface ErrorMessage {
  type: "errorMessage";
  name: string;
  key?: string;
  hideErrors?: boolean;
  subfields?: Fields;
}
